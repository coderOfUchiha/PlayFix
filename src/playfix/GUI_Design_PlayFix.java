/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package playfix;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
import static playfix.PlayFix.random;

/**
 *
 * @author tariq
 */
public class GUI_Design_PlayFix extends javax.swing.JFrame {

    /**
     * Creates new form GUI_Design_PlayFix
     */
    public GUI_Design_PlayFix() {
        initComponents();
        JButton[] btn = {jButton1, jButton2, jButton3, jButton4};
        for (JButton btns : btn) {
            btns.setBackground(new Color(21, 25, 28));
            btns.setUI(new BasicButtonUI());
            btns.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    btns.setBackground(new Color(54, 81, 207));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    btns.setBackground(new Color(21, 25, 28));
                }

            });

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testing = new javax.swing.JLabel();
        rootPanel = new javax.swing.JPanel();
        CenterPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dayTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        knockOutFixture = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        groupStageFixtureTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        groupStageGroupTable = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        enterTeamName = new javax.swing.JLabel();
        teamName = new javax.swing.JTextField();
        connectoin = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        biddingBox = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        playerName1 = new javax.swing.JLabel();
        postion1 = new javax.swing.JLabel();
        catagory1 = new javax.swing.JLabel();
        startingBid = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        biddingButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        Name1 = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        KOButton = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TeamNameTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        TotalGroupLabel = new javax.swing.JLabel();
        durationTextField3 = new javax.swing.JTextField();
        Duration = new javax.swing.JLabel();
        DTextField1 = new javax.swing.JTextField();
        GSFixGen = new javax.swing.JLabel();
        Duration1 = new javax.swing.JLabel();
        TMTextField = new javax.swing.JTextField();
        RRFixtureGen = new javax.swing.JLabel();
        TotalMatchesLabel1 = new javax.swing.JLabel();
        KOFixtureGen = new javax.swing.JLabel();
        TGTextField1 = new javax.swing.JTextField();
        Duration2 = new javax.swing.JLabel();
        DTextField2 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        playerName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        postion = new javax.swing.JComboBox<>();
        cataogory = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        batsmanTable = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        warning = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        bronzeBid = new javax.swing.JTextField();
        silverBid = new javax.swing.JTextField();
        platinumBid = new javax.swing.JTextField();
        goldBid = new javax.swing.JTextField();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        Slider = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        testing.setBackground(new java.awt.Color(255, 255, 255));
        testing.setForeground(new java.awt.Color(21, 25, 28));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rootPanel.setPreferredSize(new java.awt.Dimension(700, 500));
        rootPanel.setLayout(new java.awt.BorderLayout());

        CenterPanel.setBackground(new java.awt.Color(34, 40, 44));
        CenterPanel.setPreferredSize(new java.awt.Dimension(620, 500));
        CenterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(34, 40, 44));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(650, 600));

        jPanel10.setBackground(new java.awt.Color(34, 40, 44));
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 50, 20));

        jPanel2.setBackground(new java.awt.Color(34, 40, 44));
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 70));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_home_512px_3.png"))); // NOI18N
        jLabel3.setText("HOME");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 35));
        jPanel2.add(jLabel3);

        jPanel10.add(jPanel2);

        jPanel20.setBackground(new java.awt.Color(44, 52, 58));
        jPanel20.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Create A Tournament");
        jPanel20.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 15, -1, -1));

        jLabel9.setBackground(new java.awt.Color(44, 52, 58));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_leaderboard_100px_3.png"))); // NOI18N
        jPanel20.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 46, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_Plus_50px.png"))); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(35, 35));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
        });
        jPanel20.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 50, 50));

        jPanel10.add(jPanel20);

        jPanel21.setBackground(new java.awt.Color(44, 52, 58));
        jPanel21.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Create An Auction      ");
        jPanel21.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 15, -1, -1));

        jLabel11.setBackground(new java.awt.Color(44, 52, 58));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_auction_100px_1.png"))); // NOI18N
        jPanel21.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 46, -1, 90));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_Plus_50px.png"))); // NOI18N
        jLabel12.setPreferredSize(new java.awt.Dimension(35, 35));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel21.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 50, 50));

        jPanel10.add(jPanel21);

        jTabbedPane1.addTab("tab1", jPanel10);

        jPanel11.setBackground(new java.awt.Color(34, 40, 44));
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel3.setBackground(new java.awt.Color(34, 40, 44));
        jPanel3.setPreferredSize(new java.awt.Dimension(600, 70));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Fixture");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jPanel11.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(34, 40, 44));
        jPanel4.setPreferredSize(new java.awt.Dimension(600, 300));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dayTable.setBackground(new java.awt.Color(255, 255, 255));
        dayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                " Matches"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(dayTable);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 20, 150, 270));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Qualifier1:");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Qualifier2:");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Qualifier3:");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Qualifier4:");

        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setForeground(new java.awt.Color(21, 25, 28));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setForeground(new java.awt.Color(21, 25, 28));

        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setForeground(new java.awt.Color(21, 25, 28));

        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setForeground(new java.awt.Color(21, 25, 28));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 240, 120));

        jPanel11.add(jPanel4);

        jTabbedPane1.addTab("tab2", jPanel11);

        jPanel13.setBackground(new java.awt.Color(34, 40, 44));

        knockOutFixture.setBackground(new java.awt.Color(255, 255, 255));
        knockOutFixture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Matches"
            }
        ));
        jScrollPane1.setViewportView(knockOutFixture);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(452, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel13);

        jPanel14.setBackground(new java.awt.Color(34, 40, 44));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab5", jPanel14);

        jPanel15.setBackground(new java.awt.Color(34, 40, 44));

        groupStageFixtureTable.setBackground(new java.awt.Color(255, 255, 255));
        groupStageFixtureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Match Table"
            }
        ));
        jScrollPane4.setViewportView(groupStageFixtureTable);

        groupStageGroupTable.setBackground(new java.awt.Color(255, 255, 255));
        groupStageGroupTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group Table"
            }
        ));
        jScrollPane5.setViewportView(groupStageGroupTable);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(454, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(129, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("tab6", jPanel15);

        jPanel17.setBackground(new java.awt.Color(34, 40, 44));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (3).png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (4).png"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        enterTeamName.setBackground(new java.awt.Color(255, 255, 255));
        enterTeamName.setForeground(new java.awt.Color(255, 255, 255));
        enterTeamName.setText("Enter Team Name:");

        teamName.setBackground(new java.awt.Color(255, 255, 255));
        teamName.setForeground(new java.awt.Color(21, 25, 28));

        connectoin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (10).png"))); // NOI18N
        connectoin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectoinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel16)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel17))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(enterTeamName)
                        .addGap(18, 18, 18)
                        .addComponent(teamName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(connectoin)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterTeamName)
                    .addComponent(teamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(connectoin, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab8", jPanel17);

        jPanel18.setBackground(new java.awt.Color(34, 40, 44));

        biddingBox.setBackground(new java.awt.Color(255, 255, 255));
        biddingBox.setColumns(20);
        biddingBox.setRows(5);
        jScrollPane6.setViewportView(biddingBox);

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Player's Information:");

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Name:");

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Position:");

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Catagory:");

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Starting Bid:");

        playerName1.setBackground(new java.awt.Color(255, 255, 255));
        playerName1.setForeground(new java.awt.Color(255, 255, 255));
        playerName1.setText("jLabel21");

        postion1.setBackground(new java.awt.Color(255, 255, 255));
        postion1.setForeground(new java.awt.Color(255, 255, 255));
        postion1.setText("jLabel21");

        catagory1.setBackground(new java.awt.Color(255, 255, 255));
        catagory1.setForeground(new java.awt.Color(255, 255, 255));
        catagory1.setText("jLabel21");

        startingBid.setBackground(new java.awt.Color(255, 255, 255));
        startingBid.setForeground(new java.awt.Color(255, 255, 255));
        startingBid.setText("jLabel21");

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (9).png"))); // NOI18N

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (8).png"))); // NOI18N

        jLabel49.setBackground(new java.awt.Color(255, 255, 255));
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("BIDDING BOX");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(postion1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(catagory1)
                            .addComponent(startingBid))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel47)))
                        .addGap(0, 168, Short.MAX_VALUE))))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel24)
                    .addComponent(playerName1)
                    .addComponent(catagory1))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(startingBid)
                    .addComponent(postion1))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("tab9", jPanel18);

        jPanel19.setBackground(new java.awt.Color(34, 40, 44));
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        biddingButton.setBackground(new java.awt.Color(19, 191, 191));
        biddingButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        biddingButton.setText("Bid");
        biddingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                biddingButtonMouseClicked(evt);
            }
        });
        biddingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biddingButtonActionPerformed(evt);
            }
        });
        jPanel19.add(biddingButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 130, 60));

        jTabbedPane1.addTab("tab10", jPanel19);

        jPanel12.setBackground(new java.awt.Color(34, 40, 44));
        jPanel12.setPreferredSize(new java.awt.Dimension(600, 420));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Tournament Name:");
        jPanel12.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 35, -1, -1));

        name.setBackground(new java.awt.Color(255, 255, 255));
        name.setPreferredSize(new java.awt.Dimension(200, 30));
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });
        jPanel12.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Select A sports      :");
        jPanel12.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox1.setForeground(new java.awt.Color(204, 204, 204));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------", "Cricket", "Football", "Carrom", "Chess", "Ludo", " " }));
        jComboBox1.setPreferredSize(new java.awt.Dimension(200, 30));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel12.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 180, -1));

        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Enter Team/Participants Name:");
        jPanel12.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 20));

        Name1.setBackground(new java.awt.Color(255, 255, 255));
        Name1.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel12.add(Name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 30, -1, -1));

        jPanel27.setBackground(new java.awt.Color(44, 52, 58));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel12.add(jPanel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, 90));

        jLabel40.setBackground(new java.awt.Color(204, 204, 204));
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Knock-Out");
        jPanel12.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 120, 20));

        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Round Robin");
        jPanel12.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, 20));

        KOButton.setBackground(new java.awt.Color(44, 52, 58));
        KOButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        KOButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_tournament_80px.png"))); // NOI18N
        KOButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KOButtonMouseClicked(evt);
            }
        });
        jPanel12.add(KOButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 90, 100));

        jLabel34.setBackground(new java.awt.Color(44, 52, 58));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_table_80px.png"))); // NOI18N
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 90, 110));

        jLabel35.setBackground(new java.awt.Color(44, 52, 58));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_group_layouts_80px.png"))); // NOI18N
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 100, 90));

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Group Stage");
        jPanel12.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Select type of tournament: ");
        jPanel12.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        TeamNameTable.setAutoCreateRowSorter(true);
        TeamNameTable.setBackground(new java.awt.Color(255, 255, 255));
        TeamNameTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Team Name"
            }
        ));
        jScrollPane2.setViewportView(TeamNameTable);

        jPanel12.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 150, 290));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_Plus_30px.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, -1, -1));

        TotalGroupLabel.setForeground(new java.awt.Color(255, 255, 255));
        TotalGroupLabel.setText("Total Group:");
        TotalGroupLabel.setEnabled(false);
        jPanel12.add(TotalGroupLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 80, -1));

        durationTextField3.setBackground(new java.awt.Color(255, 255, 255));
        durationTextField3.setEnabled(false);
        durationTextField3.setPreferredSize(new java.awt.Dimension(71, 25));
        durationTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationTextField3ActionPerformed(evt);
            }
        });
        jPanel12.add(durationTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 40, -1));

        Duration.setForeground(new java.awt.Color(255, 255, 255));
        Duration.setText("Duration:");
        Duration.setEnabled(false);
        jPanel12.add(Duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 60, -1));

        DTextField1.setBackground(new java.awt.Color(255, 255, 255));
        DTextField1.setForeground(new java.awt.Color(21, 25, 28));
        DTextField1.setEnabled(false);
        DTextField1.setPreferredSize(new java.awt.Dimension(71, 25));
        DTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTextField1ActionPerformed(evt);
            }
        });
        jPanel12.add(DTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 40, -1));

        GSFixGen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (2).png"))); // NOI18N
        GSFixGen.setEnabled(false);
        GSFixGen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GSFixGenMouseClicked(evt);
            }
        });
        jPanel12.add(GSFixGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 100, 30));

        Duration1.setForeground(new java.awt.Color(255, 255, 255));
        Duration1.setText("Duration:");
        Duration1.setEnabled(false);
        jPanel12.add(Duration1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 60, -1));

        TMTextField.setBackground(new java.awt.Color(255, 255, 255));
        TMTextField.setForeground(new java.awt.Color(21, 25, 28));
        TMTextField.setEnabled(false);
        TMTextField.setPreferredSize(new java.awt.Dimension(71, 25));
        TMTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TMTextFieldActionPerformed(evt);
            }
        });
        jPanel12.add(TMTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 385, 40, -1));

        RRFixtureGen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (2).png"))); // NOI18N
        RRFixtureGen.setEnabled(false);
        RRFixtureGen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RRFixtureGenMouseClicked(evt);
            }
        });
        jPanel12.add(RRFixtureGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 100, 30));

        TotalMatchesLabel1.setForeground(new java.awt.Color(255, 255, 255));
        TotalMatchesLabel1.setText("Total Matches:");
        TotalMatchesLabel1.setEnabled(false);
        jPanel12.add(TotalMatchesLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 80, -1));

        KOFixtureGen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (2).png"))); // NOI18N
        KOFixtureGen.setEnabled(false);
        KOFixtureGen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KOFixtureGenMouseClicked(evt);
            }
        });
        jPanel12.add(KOFixtureGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, 100, 30));

        TGTextField1.setBackground(new java.awt.Color(255, 255, 255));
        TGTextField1.setEnabled(false);
        TGTextField1.setPreferredSize(new java.awt.Dimension(71, 25));
        TGTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TGTextField1ActionPerformed(evt);
            }
        });
        jPanel12.add(TGTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 385, 40, -1));

        Duration2.setForeground(new java.awt.Color(255, 255, 255));
        Duration2.setText("Duration:");
        Duration2.setEnabled(false);
        jPanel12.add(Duration2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 60, -1));

        DTextField2.setBackground(new java.awt.Color(255, 255, 255));
        DTextField2.setEnabled(false);
        DTextField2.setPreferredSize(new java.awt.Dimension(71, 25));
        DTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTextField2ActionPerformed(evt);
            }
        });
        jPanel12.add(DTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 40, -1));

        jTabbedPane1.addTab("tab3", jPanel12);

        jPanel16.setBackground(new java.awt.Color(34, 40, 44));
        jPanel16.setPreferredSize(new java.awt.Dimension(650, 550));

        playerName.setBackground(new java.awt.Color(255, 255, 255));
        playerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                playerNameKeyReleased(evt);
            }
        });

        jLabel18.setText("Name:");

        jLabel19.setText("Position");

        jLabel20.setText("Category:");

        postion.setBackground(new java.awt.Color(255, 255, 255));
        postion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------", "Batsman", "Bowler", "All-rounder", "Keeper" }));
        postion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postionActionPerformed(evt);
            }
        });

        cataogory.setBackground(new java.awt.Color(255, 255, 255));
        cataogory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------", "Bronze", "Silver", "Gold", "Platinum" }));

        batsmanTable.setBackground(new java.awt.Color(255, 255, 255));
        batsmanTable.setForeground(new java.awt.Color(21, 25, 28));
        batsmanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(batsmanTable);

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (6).png"))); // NOI18N

        jLabel39.setText("Players Entry:");

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/button (7).png"))); // NOI18N
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });

        warning.setText("jLabel42");

        jLabel42.setText("Set Starting Bid:");

        jLabel43.setText("Bronze:");

        jLabel44.setText("Silver:");

        jLabel45.setText("Gold:");

        jLabel46.setText("Platinum:");

        bronzeBid.setBackground(new java.awt.Color(255, 255, 255));
        bronzeBid.setForeground(new java.awt.Color(21, 25, 28));

        silverBid.setBackground(new java.awt.Color(255, 255, 255));
        silverBid.setForeground(new java.awt.Color(21, 25, 28));

        platinumBid.setBackground(new java.awt.Color(255, 255, 255));
        platinumBid.setForeground(new java.awt.Color(21, 25, 28));

        goldBid.setBackground(new java.awt.Color(255, 255, 255));
        goldBid.setForeground(new java.awt.Color(21, 25, 28));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel42)
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel46))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(platinumBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bronzeBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(silverBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(goldBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cataogory, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(postion, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel41)
                                    .addComponent(warning, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jLabel38)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(postion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cataogory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(warning)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel42)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(bronzeBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(silverBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(goldBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(platinumBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("tab7", jPanel16);

        CenterPanel.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 570));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        CenterPanel.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));

        rootPanel.add(CenterPanel, java.awt.BorderLayout.CENTER);

        Slider.setBackground(new java.awt.Color(21, 25, 28));
        Slider.setPreferredSize(new java.awt.Dimension(80, 519));
        Slider.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 10));

        jPanel1.setBackground(new java.awt.Color(21, 25, 28));
        jPanel1.setPreferredSize(new java.awt.Dimension(80, 170));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_volleyball_player_50px.png"))); // NOI18N
        jPanel1.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PlayFix");
        jPanel1.add(jLabel2);

        Slider.add(jPanel1);

        jButton1.setBackground(new java.awt.Color(21, 25, 28));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_home_512px_3.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Slider.add(jButton1);

        jButton2.setBackground(new java.awt.Color(21, 25, 28));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_trophy_30px.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Slider.add(jButton2);

        jButton3.setBackground(new java.awt.Color(21, 25, 28));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_auction_30px.png"))); // NOI18N
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Slider.add(jButton3);

        jButton4.setBackground(new java.awt.Color(21, 25, 28));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playfix/icon/icons8_settings_24px.png"))); // NOI18N
        jButton4.setPreferredSize(new java.awt.Dimension(36, 36));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Slider.add(jButton4);

        rootPanel.add(Slider, java.awt.BorderLayout.WEST);

        getContentPane().add(rootPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        enterTeamName.setVisible(false);
        teamName.setVisible(false);
        connectoin.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_nameActionPerformed

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        // TODO add your handling code here:
        TMTextField.setEnabled(true);
        TotalMatchesLabel1.setEnabled(true);
        durationTextField3.setEnabled(true);
        Duration1.setEnabled(true);
        RRFixtureGen.setEnabled(true);
        DTextField2.setEnabled(true);

        DefaultTableModel dtm = (DefaultTableModel) TeamNameTable.getModel();
        int n = dtm.getRowCount() - 1;
        int total_match = (n * (n - 1)) / 2;
        String TM = String.valueOf(total_match);
        TMTextField.setText(TM);


    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(9);
        warning.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        String Name[] = {name.getText()};

        DefaultTableModel dtm = (DefaultTableModel) TeamNameTable.getModel();
        dtm.addRow(Name);
        name.setText(null);


    }//GEN-LAST:event_jLabel7MouseClicked

    private void durationTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationTextField3ActionPerformed

    private void DTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DTextField1ActionPerformed

    private void GSFixGenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GSFixGenMouseClicked
        // TODO add your handling code here:
        ArrayList<String> teams = new ArrayList<String>();
        ArrayList<String> groupList = new ArrayList<String>();
        DefaultTableModel dtm = (DefaultTableModel) TeamNameTable.getModel();
        String totalGroup;
        totalGroup = TGTextField1.getText();
        int convertedTotalGroup = Integer.parseInt(totalGroup);
        System.out.println(convertedTotalGroup);
        System.out.println(dtm.getRowCount());
        String duration = durationTextField3.getText();
        int conDuration = Integer.parseInt(duration);

        try {
            for (int i = 0; i < dtm.getRowCount() - 1; i++) {
                teams.add((String) TeamNameTable.getValueAt(i + 1, NORMAL));
            }
            System.out.println(teams);

        } catch (Exception e) {
            System.out.println("koshto");
        }
        int index2 = 0;
        int listSize = teams.size() - 1;
        System.out.println(teams.size());
        for (int j = 0; j < listSize; j++) {
            int index1 = random.nextInt(teams.size() - 1);
            groupList.add(teams.get(index1));
            teams.remove(index1);
            System.out.println(teams.size());
        }
        groupList.add(teams.get(0));
        System.out.println(groupList);
        int teamPerGroup = groupList.size() / convertedTotalGroup;
        for (int i = 1; i <= convertedTotalGroup; i++) {
            System.out.println("group:" + i);
            for (int k = 0; k < (groupList.size()) / convertedTotalGroup; k++) {
                System.out.println(groupList.get(index2));
                index2++;
            }
        }
        System.out.println(groupList);
        jTabbedPane1.setSelectedIndex(4);
        DefaultTableModel dtm1 = (DefaultTableModel) groupStageGroupTable.getModel();
        int group = 0, days = 0;
        try {
            for (int r = 0; r < groupList.size(); r++) {
                if (r % teamPerGroup == 0) {
                    group++;
                    String con_dayCount = String.valueOf(group);
                    String groups[] = {"Group" + con_dayCount};
                    dtm1.addRow(groups);
                    System.out.println(totalGroup);
                }
                String groupMember[] = {groupList.get(r)};
                System.out.println(groupMember);
                dtm1.addRow(groupMember);

            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception er mayrebaap");
        }
        System.out.println(groupList);

        System.out.println(teamPerGroup);
        int matchesPerGroup = (teamPerGroup * (teamPerGroup - 1)) / 2;
        int totalMatch = convertedTotalGroup * matchesPerGroup;
        int matchPerDay = totalMatch / conDuration;
        System.out.println(totalMatch);
        int i, j, k = 1, l, n = 0;
        ArrayList<String> matches = new ArrayList<String>();

        DefaultTableModel dtm2 = (DefaultTableModel) groupStageFixtureTable.getModel();

        if (teamPerGroup % 2 == 1) {
            for (i = 0; i < convertedTotalGroup; i++) {
                groupList.add(n, "done");
                for (j = 0; j < teamPerGroup; j++) {
                    l = teamPerGroup + n;
                    for (k = n + 1; k < n + teamPerGroup + 1; k++) {
                        Collections.swap(groupList, k, n + 1);
                    }
                    System.out.println(groupList);
                    for (int m = n; m < n + (teamPerGroup + 1) / 2; m++) {
                        if (groupList.get(m).equals("done")) {
                            continue;
                        } else {
                            matches.add(groupList.get(m) + " vs " + groupList.get(l));
                            l--;
                        }
                    }
                }
                n = n + teamPerGroup + 1;
            }
            System.out.println(matches);
            System.out.println(matches.size());
            for (i = 0; i < matchesPerGroup; i++) {
                System.out.println("Day" + (i + 1));
                for (j = 0; j < convertedTotalGroup; j++) {
                    System.out.println(matches.get(i + j * matchesPerGroup));
                }
            }
            int count = 0, day = 0;

            for (int r = 0; r < matchesPerGroup; r++) {

                for (int m = 0; m < convertedTotalGroup; m++) {
//                 if (count % matchPerDay == 0) {
//                          day++;
//                          String con_dayCount = String.valueOf(days);
//                          String groups[] = {"Day " + con_dayCount};
//                          dtm2.addRow(groups);
//                        } else {
//                        count++;
//                    }
                    String match[] = {matches.get(r + m * matchesPerGroup)};
                    System.out.println(match);
                    dtm2.addRow(match);

                }

            }

        } else {
            for (i = 0; i < convertedTotalGroup; i++) {
                for (j = 0; j < teamPerGroup; j++) {
                    l = teamPerGroup + n - 1;
                    for (k = n + 1; k < n + teamPerGroup; k++) {
                        Collections.swap(groupList, k, n + 1);
                    }
                    System.out.println(groupList);
                    for (int m = n; m < n + (teamPerGroup) / 2; m++) {

                        matches.add(groupList.get(m) + " vs " + groupList.get(l));
                        l--;

                    }
                }
                n = n + teamPerGroup;
            }
            System.out.println(matches);
            System.out.println(matches.size());
            for (i = 0; i < matchesPerGroup; i++) {
                System.out.println("Day" + (i + 1));
                for (j = 0; j < convertedTotalGroup; j++) {
                    System.out.println(matches.get(i + j * 10));
                }
            }
        }
        ArrayList<String> fixture = new ArrayList<String>();
        for (int r = 0; r < matchesPerGroup; r++) {
            for (j = 0; j < convertedTotalGroup; j++) {

                fixture.add(matches.get(r + j * matchesPerGroup));

            }

        }
        System.out.println(fixture);
        int index1 = 0;
        for (i = 0; i < conDuration; i++) {
            String con_dayCount = String.valueOf(i + 1);
            String Days[] = {"Day " + con_dayCount};
            dtm2.addRow(Days);
            for (j = 0; j < matchPerDay; j++) {
                String match[] = {fixture.get(index1)};
                System.out.println(match);
                dtm2.addRow(match);
                index1++;
            }
        }

    }//GEN-LAST:event_GSFixGenMouseClicked

    private void TMTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TMTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TMTextFieldActionPerformed

    private void RRFixtureGenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RRFixtureGenMouseClicked
        // TODO add your handling code here:
        ArrayList<String> teams = new ArrayList<String>();
        DefaultTableModel dtm = (DefaultTableModel) TeamNameTable.getModel();
        System.out.println(dtm.getRowCount());
        try {
            for (int i = 0; i < dtm.getRowCount() - 1; i++) {
                teams.add((String) TeamNameTable.getValueAt(i + 1, NORMAL));
            }
            System.out.println(teams);

        } catch (Exception e) {
            System.out.println("");
        }

        //Declaring variable
        int i, j, l, m, index = 0;
        String d;
        d = DTextField2.getText();
        int D = Integer.parseInt(d);
        System.out.println(D);

        //Declaring ArrayList for storing fixture
        ArrayList<String> fixture = new ArrayList<String>();

        //Finding size of the arraylist without adding 'done' to determine whether size is odd or even
        int n = teams.size();
        System.out.println(n);
        int total_match = (n * (n - 1)) / 2;
        System.out.println(total_match);

        int match_per_Day = total_match / D;
        System.out.println(match_per_Day);

        if (n % 2 == 0) //process for even
        {

            //this Loop for total round
            for (i = 0; i < teams.size() - 1; i++) {

                //Intermediate loop
                l = teams.size() - 1;

                //This loop is for swapping teams
                for (int k = 2; k < teams.size(); k++) {
                    Collections.swap(teams, k, 1);
                }
                System.out.println(teams);

                // this loop is for storing fixture in arraylist
                for (m = 0; m < (teams.size()) / 2; m++) {
                    fixture.add(teams.get(m) + " vs " + teams.get(l));
                    l--;
                }

            }
            for (int a = 1; a <= D; a++) {
                System.out.println("Day" + a);
                for (int b = 0; b < match_per_Day; b++) {
                    System.out.println(fixture.get(index));
                    index++;
                }
            }

            jTabbedPane1.setSelectedIndex(1);

            ArrayList<String> daycount = new ArrayList<String>();
            int count = 1;
            for (int f = 0; f < fixture.size(); f++) {
                daycount.add("Day" + count);
                if ((f + 1) % match_per_Day == 0) {
                    count++;

                }
            }
            DefaultTableModel dtm1 = (DefaultTableModel) dayTable.getModel();

            for (int h = 0; h < daycount.size(); h++) {
                String Day[] = {daycount.get(h) + ":   " + fixture.get(h)};
                dtm1.addRow(Day);

            }

            for (int q = 0; q < fixture.size(); q++) {
                String match[] = {fixture.get(q)};

            }

        } else //process for odd
        {

            teams.add("done");
            //Swapping the first team with 'done' for algorithm
            Collections.swap(teams, 0, teams.size() - 1);

            //this Loop for total round
            for (i = 0; i < teams.size() - 1; i++) {

                //Intermediate loop
                for (j = 1; j <= 1; j++) {
                    l = teams.size() - 2;

                    // this loop is for swapping teams
                    for (int k = 2; k < teams.size(); k++) {
                        Collections.swap(teams, k, 1);
                    }

                    // this loop is for storing fixture in arraylist
                    for (m = 0; m < (teams.size()) / 2; m++) {
                        if (teams.get(m).equals("done")) {
                            continue;
                        } else {
                            fixture.add(teams.get(m) + " vs " + teams.get(l));
                            l--;
                        }
                    }
                }
            }
            for (int a = 1; a <= D; a++) {
                System.out.println("Day" + a);
                for (int b = 0; b < match_per_Day; b++) {
                    System.out.println(fixture.get(index));
                    index++;

                }
            }

        }


    }//GEN-LAST:event_RRFixtureGenMouseClicked

    private void KOFixtureGenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KOFixtureGenMouseClicked
        // TODO add your handling code here:
        ArrayList<String> knockOutTeams = new ArrayList<String>();
        ArrayList<String> randomList = new ArrayList<String>();
        String total_days = DTextField1.getText();
        System.out.println(total_days);
        int con_totalDays = Integer.parseInt(total_days);
        int y = TeamNameTable.getRowCount() - 1;
        System.out.println(y);
        for (int c = 0; c < y; c++) {
            knockOutTeams.add((String) TeamNameTable.getValueAt(c + 1, NORMAL));
        }
        System.out.println(knockOutTeams);
        int index;
        int remainingTeam = knockOutTeams.size();
        try {
            for (int j = 0; j < remainingTeam; j++) {
                index = random.nextInt(knockOutTeams.size());
                randomList.add(knockOutTeams.get(index));
                knockOutTeams.remove(index);

            }
        } catch (Exception e) {

            e.printStackTrace();
        }

        System.out.println(randomList);
        int totalMatch = randomList.size() / 2;
        int matchPerDay = totalMatch / con_totalDays;
        jTabbedPane1.setSelectedIndex(2);
        DefaultTableModel dtm = (DefaultTableModel) knockOutFixture.getModel();
        int r;
        int dayCount = 0;
        System.out.println("Size of RandomList:" + randomList.size());
        ArrayList<String> fixture = new ArrayList<String>();
        int index1 = 0;
        try {
            for (r = 0; r < randomList.size(); r = r + 2) {

////                if (dayCount % matchPerDay == 0) {
//                    System.out.println(d);
//                    
//                  
//                }
//                else
//                {
//                    dayCount++;
//                }
                fixture.add(randomList.get(r) + " vs " + randomList.get(r + 1));

            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception er mayrebaap");
        }
        for (int i = 0; i < con_totalDays; i++) {

            String con_dayCount = String.valueOf(i + 1);
            String d[] = {"Day" + con_dayCount};
            dtm.addRow(d);
            for (int j = 0; j < matchPerDay; j++) {
                String finalFixture[] = {fixture.get(index1)};
                dtm.addRow(finalFixture);
                index1++;
            }
        }


    }//GEN-LAST:event_KOFixtureGenMouseClicked

    private void KOButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KOButtonMouseClicked
        // TODO add your handling code here:
        Duration.setEnabled(true);
        DTextField1.setEnabled(true);
        KOFixtureGen.setEnabled(true);

    }//GEN-LAST:event_KOButtonMouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
        TotalGroupLabel.setEnabled(true);
        TGTextField1.setEnabled(true);
        GSFixGen.setEnabled(true);
        Duration1.setEnabled(true);
        durationTextField3.setEnabled(true);

    }//GEN-LAST:event_jLabel35MouseClicked

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_nameKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void TGTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TGTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TGTextField1ActionPerformed

    private void DTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DTextField2ActionPerformed

    private void postionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postionActionPerformed

    private void playerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_playerNameKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_playerNameKeyReleased

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        // TODO add your handling code here:

        HashMap<String, String> playerInfo = new HashMap<String, String>();
        String Name[] = {playerName.getText()};
        String Name1 = playerName.getText();
        String Position = (String) postion.getSelectedItem();
        String Catagory = (String) cataogory.getSelectedItem();
        if (Name.equals(null) || Position.equals("------") || Catagory.equals("-------")) {
            warning.setText("Fill up all the field above");

        } else {

            DefaultTableModel dtm1 = (DefaultTableModel) batsmanTable.getModel();
            dtm1.addRow(Name);
            playerName.setText("");
            warning.setVisible(false);
            playerInfo.put(Name1, Position);

        }
        System.out.println(Position);
        System.out.println(Name);


    }//GEN-LAST:event_jLabel41MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton3MouseClicked

    private void biddingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biddingButtonActionPerformed
        // TODO add your handling code here:
        Client client = new Client();
        client.writeMassage();


    }//GEN-LAST:event_biddingButtonActionPerformed

    private void connectoinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectoinMouseClicked
        // TODO add your handling code here:

        Client client = new Client();

        jTabbedPane1.setSelectedIndex(7);


    }//GEN-LAST:event_connectoinMouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here: 
        
        jTabbedPane1.setSelectedIndex(6);
        playerName1.setVisible(false);
        postion1.setVisible(false);
        catagory1.setVisible(true);
        startingBid.setVisible(false);
        new Thread(new Runnable() {
            @Override
            public void run() {

                while (true) {
                    try {
                        Server server = new Server();
                        server.readMassage();
                        String msg = server.receivedMassage.readLine();
                        System.out.println(msg);
                    } catch (IOException ex) {
                        Logger.getLogger(GUI_Design_PlayFix.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int sum = 60000;
                    System.out.println(sum);
                }

//                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        }).start();


    }//GEN-LAST:event_jLabel16MouseClicked

    private void biddingButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_biddingButtonMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_biddingButtonMouseClicked

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        teamName.setVisible(true);
        enterTeamName.setVisible(true);
        connectoin.setVisible(true);
    }//GEN-LAST:event_jLabel17MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Design_PlayFix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Design_PlayFix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Design_PlayFix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Design_PlayFix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Design_PlayFix().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CenterPanel;
    private javax.swing.JTextField DTextField1;
    private javax.swing.JTextField DTextField2;
    private javax.swing.JLabel Duration;
    private javax.swing.JLabel Duration1;
    private javax.swing.JLabel Duration2;
    private javax.swing.JLabel GSFixGen;
    private javax.swing.JLabel KOButton;
    private javax.swing.JLabel KOFixtureGen;
    private javax.swing.JTextField Name1;
    private javax.swing.JLabel RRFixtureGen;
    private javax.swing.JPanel Slider;
    private javax.swing.JTextField TGTextField1;
    private javax.swing.JTextField TMTextField;
    private javax.swing.JTable TeamNameTable;
    private javax.swing.JLabel TotalGroupLabel;
    private javax.swing.JLabel TotalMatchesLabel1;
    private javax.swing.JTable batsmanTable;
    private javax.swing.JTextArea biddingBox;
    private javax.swing.JButton biddingButton;
    private javax.swing.JTextField bronzeBid;
    private javax.swing.JLabel catagory1;
    private javax.swing.JComboBox<String> cataogory;
    private javax.swing.JLabel connectoin;
    private javax.swing.JTable dayTable;
    private javax.swing.JTextField durationTextField3;
    private javax.swing.JLabel enterTeamName;
    private javax.swing.JTextField goldBid;
    private javax.swing.JTable groupStageFixtureTable;
    private javax.swing.JTable groupStageGroupTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable knockOutFixture;
    private javax.swing.JTextField name;
    private javax.swing.JTextField platinumBid;
    private javax.swing.JTextField playerName;
    private javax.swing.JLabel playerName1;
    private javax.swing.JComboBox<String> postion;
    private javax.swing.JLabel postion1;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JTextField silverBid;
    private javax.swing.JLabel startingBid;
    private javax.swing.JTextField teamName;
    private javax.swing.JLabel testing;
    private javax.swing.JLabel warning;
    // End of variables declaration//GEN-END:variables

    private int parseInt(int D) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
